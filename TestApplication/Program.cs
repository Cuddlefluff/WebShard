using WebShard.Filtering;
using WebShard.Ioc;
using WebShard.Routing;

namespace WebShard
{
    public class TestController
    {
        public class Model
        {
            public string FirstName { get; set; }
            public string LastName { get; set; }
        }
        private readonly IHttpRequestContext _request;

        public TestController(IHttpRequestContext request)
        {
            _request = request;
        }

        public IResponse JsonTest()
        {
            return new JsonResponse(new { Foo = 123, Bar = new[] { 1, 2, 3 } });
        }

        public IResponse Post(Model model)
        {
            return new ContentResponse("Foo");
        }

        public IResponse Get()
        {
            return new ContentResponse(@"
<!doctype html>
<html>
    <head>
        <link href=""//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css"" rel=""stylesheet"">
        <script src=""//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js""></script>

        <title>WebServer test application controller</title>
    </head>
    <body>
        <h2>Test web server</h2>
        <p>This is a test document generated by the test controller.</p>
        Your endpoing is <strong>" + _request.RemoteAddress + @"</strong>.
        <div>
            <form action='/' method='POST' class='form'>
                <div class='form-group'>
                <label for='FirstName'>First name</label>
                <input type='text' name='FirstName' class='form-input' />
                </div>
                <div class='form-group'>
                <label for='LastName'>Last name</label>
                <input type='text' name='LastName' class='form-input' />
                </div>
                <div class='form-group'>
                    <input type='submit' value='Post' />
                </div>
            </form>
        </div>
    </body>
</html>
");
        }
    }

    class Program
    {
        static void Main()
        {
            var app = new HttpApplication();

            app.FilterRegistry.Register(c => new PasswordCredentials("foo", "bar"));
            app.FilterRegistry.Register<BasicAuthorizationFilter>();
            app.ControllerRegistry.Register<TestController>();
            app.RouteTable.Add("/{action?}", new { controller = "Test" });

            var server = new HttpWebServer(app);

            server.Start();
        }
    }
}
